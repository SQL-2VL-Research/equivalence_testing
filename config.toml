[main]
# Whether training mode is on
train=true
# number of queries to generate
num_generate=20
# count the 2vl-3vl equivalent queries
count_equivalence=true
# measure average query generation time
measure_generation_time=true
# assert parcing the printed AST gives the
# same result (checks validity of AST usage)
assert_parcing_equivalence=true
# check the queries run without errors on the
# schema (TODO)
assert_runs_on_schema=false
# Pring how many queries were already generated
print_progress=true

[training]
# path to a file with all the training queries separated by ";\n"
training_db_path="training_dbs/all_default_queries.sql"
# schema of the training queries
training_schema="schema/tpc-h_tables.sql"

[query_generator]
# print the queries on generation
print_queries=false
# print the table schema after parcing
print_schema=false
# Path to the file with the database schema
table_schema_path="schema/tpc-h_tables.sql"
# Which dynamic model to use as a state selector
dynamic_model="anticall"
# aggregate functions settings
aggregate_functions_distribution_map_file="aggregate_functions_distribution_map.json"

[state_generator]
# Path to graph source for a markov chain
graph_file_path="graph_with_select.dot"

[dynmod_anticall]
# TODO: anticall dynamic model settings
